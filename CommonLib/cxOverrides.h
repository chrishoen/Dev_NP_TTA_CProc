#pragma once

/*==============================================================================
gpio disacrete i/o
==============================================================================*/

//******************************************************************************
//******************************************************************************
//******************************************************************************

#include "GPIO.h"

namespace CX
{

//******************************************************************************
//******************************************************************************
//******************************************************************************
// This class provides gpio discrete i/o.

class Overrides
{
public:
   //***************************************************************************
   //***************************************************************************
   //***************************************************************************
   // Members:

   // Measurement variables.
   float  mTTATemperature;
   float  mTTAMainVoltage;
   float  mTTAMainCurrent;

   // Measurement variables.
   float  mDATemperature;
   float  mDAMainInputVoltage;
   float  mDAMainInputCurrent;
   float  mDATowerVoltage;
   float  mDATowerCurrent;

   //***************************************************************************
   //***************************************************************************
   //***************************************************************************
   // Methods:

   // Constructor.
   Overrides();
   void reset();

   //***************************************************************************
   //***************************************************************************
   //***************************************************************************
   // Methods:

   // Constructor.
   void show(int aPrintFilter = 0);
};

//******************************************************************************
//******************************************************************************
//******************************************************************************
// Global instance

#ifdef _CXOVERRIDES_CPP_
          Overrides gOverrides;
#else
   extern Overrides gOverrides;
#endif

//******************************************************************************
//******************************************************************************
//******************************************************************************
}//namespace

