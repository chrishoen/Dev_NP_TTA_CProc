/*==============================================================================
Description:
==============================================================================*/

//******************************************************************************
//******************************************************************************
//******************************************************************************
#include "stdafx.h"

#include "smShare.h"
#include "SuperStateDA.h"
#include "SuperStateDefs.h"
#include "CProcInfo.h"
#include "cxTTACommThread.h"

#define  _CXSUPERWANTSEVALUATORDA_CPP_
#include "cxSuperWantsEvaluatorDA.h"

namespace CX
{

//******************************************************************************
//******************************************************************************
//******************************************************************************
// Constructor

SuperWantsEvaluatorDA::SuperWantsEvaluatorDA()
{
   reset();
}

void SuperWantsEvaluatorDA::reset()
{
   mRebootTTACountZero = 0;
}

//******************************************************************************
//******************************************************************************
//******************************************************************************
// Evaluate superwants. The superwants are obtained from shared memory.

void SuperWantsEvaluatorDA::doEvaluate(bool aFirstFlag)
{
   //***************************************************************************
   //***************************************************************************
   //***************************************************************************
   // Do this first.

   // Nickname.
   SuperWantsDA& tDAW = SM::gShare->mSuperWantsDA;

   // If this is the first update.
   if (aFirstFlag)
   {
      Prn::print(Prn::DA1, "DA  Wants        first **********************");
   }

   //***************************************************************************
   //***************************************************************************
   //***************************************************************************
   // Evaluate the preferred path.

   // If the preferred rf path is to be set then store it.
   if (tDAW.mRebootCodeFlag == 1)
   {
      Prn::print(Prn::TTA1, "DA reboot the tta ************************** 101");

      // Set the reboot count zero.
      mRebootTTACountZero = 2;

      // Abort the tta comm thread.
      gTTACommThread->mAbortQCall();
   }

   // Test the reboot count zero.
   else if (mRebootTTACountZero > 0 && --mRebootTTACountZero == 0)
   {
      Prn::print(Prn::TTA1, "DA reboot the tta ************************** 201");

      // Restart the tta comm thread.
      gTTACommThread->mRunSeq1QCall();
   }

   //***************************************************************************
   //***************************************************************************
   //***************************************************************************
   // Do this first.

}

//******************************************************************************
//******************************************************************************
//******************************************************************************
}//namespace
